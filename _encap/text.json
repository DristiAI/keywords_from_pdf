{"id": "000", "text": " java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   1 java basics topics in this section include      what makes java programs portable  secure  and robust     the  structure  of  java  applets  and  applications     how java applications are executed     how applets are invoked and executed     the java language  part i     comments     declarations     expressions     statements     garbage collection     java semantics portability java programs are portable across operating systems and hardware environments  portability  is  to  your  advantage  because      you need only one version of your software to serve a broad market      the internet  in effect  becomes one giant  dynamic library      you are no longer limited by your particular computer platform  three features make java  string  programs portable  1    the  language    the  java  language  is  completely  specified   all  data type  sizes  and formats are defined as part of the language  by contrast  c c   leaves these  details   up  to  the  compiler  implementor   and  many  c c    programs  therefore java  basics java  basics   2    1996 2003  jguru com   all  rights  reserved  are  not  portable  2    the library   the java class library is available on any machine with a java runtime  system   because  a  portable  program  is  of  no  use  if  you  cannot  use  the same class library on every platform  window manager function calls in a mac application  written  in  c c     for  example   do  not  port  well  to  a  pc  3    the  byte  code    the  java  runtime  system  does  not  compile  your  source  code directly into machine language  an inflexible and nonportable representation of your program  instead  java programs are translated into machine independent byte code  the byte code is easily interpreted and therefore can be executed on any  platform  having  a  java  runtime  system    the  latest  versions  of  the  netscape navigator  browser   for  example   can  run  applets  on  virtually  any  platform   security the java language is secure in that it is very difficult to write incorrect code or viruses  that  can  corrupt steal  your  data   or  harm  hardware  such  as  hard  disks  there are two main lines of defense      interpreter level      no  pointer  arithmetic     garbage collection     array bounds checking     no illegal data conversions     browser  level   applies  to  applets  only       no local file i o     sockets  back  to  host  only     no calls to native methods robustness the java language is robust  it has several features designed to avoid crashes during program execution  including      no  pointer  arithmetic java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   3     garbage collection  no bad addresses     array and string bounds checking     no jumping to bad method addresses     interfaces and exceptions java  program  structure a file containing java source code is considered a compilation unit  such a compilation unit contains a set of classes and  optionally  a package definition to group related classes together  classes contain data and method members that specify  the  state  and  behavior  of  the  objects  in  your  program  java programs come in two flavors      standalone applications that have no initial context such as a pre existing main window     applets for www programming the major differences between applications and applets are      applets  are  not  allowed  to  use  file  i o  and  sockets   other  than  to  the  host platform    applications  do  not  have  these  restrictions      an  applet  must  be  a  subclass  of  the  java  applet   class   aplications  do  not  need  to subclass  any  particular  class      unlike  applets   applications  can  have  menus      unlike  applications   applets  need  to  respond  to  predefined  lifecycle  messages from the www browser in which they re running  java  program  execution the java byte code compiler translates a java source file into machine  independent byte code  the byte code for each publicly visible class is placed in a separate  file   so  that  the  java  runtime  system  can  easily  find  it   if  your  program instantiates an object of class  a   for example  the class loader searches the directories listed in your  classpath  environment variable for a file called  a class that  contains  the  class  definition  and  byte  code  for  class  a   there is no link phase for java programs  all linking is done dynamically at java  basics java  basics   4    1996 2003  jguru com   all  rights  reserved  runtime  the following diagram shows an example of the java compilation and execution sequence for a source file named  a java  containing public class  a  and non public class  b   java programs are  in effect  distributed applications  you may think of them as a collection of dlls  dynamically loadable libraries  that are linked on demand at runtime   when  you  write  your  own  java  applications   you  will  often  integrate your  program  with  already existing  portions  of  code  that  reside  on  other machines  a  simple  application consider  the  following  trivial  application  that  prints   hi  there    to  standard output  java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   5 public class trivialapplication        args 0  is first argument      args 1  the second   public static void main string args          system out println  hi there          the command  java trivialapplication  tells the java runtime system to begin with the class file  trivialapplication class  and to look in that file for a method with the signature  public static void main string args     the  main    method will always reside in one of your class files  the java language does not allow methods outside of class definitions  the class  in effect  creates  scoped  symbol  startingclassname main   for  your  main     method  applet  execution an  applet  is  a  java  program  that  runs  within  a  java compatible  www  browser  or in  an  appletviewer   to  execute  your  applet   the  browser      creates  an  instance  of  your  applet     sends messages to your applet to automatically invoke predefined lifecycle methods the  predefined  methods  automatically  invoked  by  the  runtime  system  are      init      this  method  takes  the  place  of  the  applet   constructor  and  is  only  called once during applet creation  instance variables should be initialized in this method  gui  components  such  as  buttons  and  scrollbars  should  be  added  to  the  gui  in this  method      start     this method is called once after  init    and whenever your applet is revisited  by  your  browser   or  when  you  deiconify  your  browser   this  method should  be  used  to  start  animations  and  other  threads      paint graphics g    this method is called when the applet drawing area needs to  be  redrawn   anything  not  drawn  by  contained  components  must  be  drawn  in this  method   bitmaps   for  example   are  drawn  here   but  buttons  are  not  because they  handle  their  own  painting      stop      this  method  is  called  when  you  leave  an  applet  or  when  you  iconify your  browser   the  method  should  be  used  to  suspend  animations  and  other java  basics java  basics   6    1996 2003  jguru com   all  rights  reserved  threads  so  they  do  not  burden  system  resources  unnecessarily   it  is  guaranteed  to be called before  destroy         destroy     this method is called when an applet terminates  for example  when quitting  the  browser   final  clean up  operations  such  as  freeing  up  system resources with  dispose    should be done here  the  dispose    method of  frame removes the menu bar  therefore  do not forget to call  super dispose    if you override the default behavior  the  basic  structure  of  an  applet  that  uses  each  of  these  predefined  methods  is  import java applet applet     include all awt class definitions import java awt    public class applettemplate extends applet     public void init            create gui  initialize applet       public void start            start threads  animations etc          public void paint graphics g           draw things in g       public void stop            suspend threads  stop animations etc          public void destroy            free up system resources  stop threads       all  you  have  to  do  is  fill  in  the  appropriate  methods  to  bring  your  applet  to  life   if you  don t  need  to  use  one  or  more  of  these  predefined  methods   simply  leave  them out  of  your  applet   the  applet  will  ignore  messages  from  the  browser  attempting to  invoke  any  of  these  methods  that  you  don t  use  a  simple  applet the  following  complete  applet  displays   hello   world  wide  web     in  your browser  window  import java applet applet  import java awt graphics  public class trivialapplet extends applet     public void paint graphics g           display a string at 20 20 java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   7        where 0 0 is the upper left corner     g drawstring  hello  world wide web    20  20         an  appletviewer  may  be  used  instead  of  a  www  browser  to  test  applets   for example   the  output  of  trivialapplet   on  an  appletviewer  looks  like  html applet  interface the  html  applet   tag  is  similar  to  the  html  img   tag   and  has  the  form   applet code appletname class width w height h   parameters    applet  where the optional parameters are a list of parameter definitions of the form   param name n value v  an example tag with parameter definitions is   applet code appletname class width 300 height 200   param name p1 value 34   param name p2 value  test     applet  where  p1  and  p2  are user defined parameters  the  code    width    and  height   parameters  are  mandatory   the  parameters codebase    alt    archives    align    vspace   and  hspace   are  optional  within  the  applet   tag  itself   your  applet  can  access  any  of  these  parameters  by  calling  applet getparameter  p   which  returns  the  string   value  of  the  parameter   for  example   the  applet  import java applet applet  public class paramtest extends applet     public void init         system out println  width is     getparameter  width         system out println  p1 is        getparameter  p1     java  basics java  basics   8    1996 2003  jguru com   all  rights  reserved      system out println  p2 is        getparameter  p2           prints  the  following  to  standard  output  width is 300 p1 is 34 p2 is test comments java comments are the same as c   comments  i e      c style block comments    where all text between the opening      and closing      is ignored  and    c   style single line comments where all text from the opening      to the end of the line is ignored  note  that  these  two  comments  can  make  a  very  useful  combination   c style comments                   cannot  be  nested   but  can   contain  c    style  comments  this  leads  to  the  interesting  observation  that  if  you  always  use  c   style comments             you can easily comment out a section of code by surrounding it  with  c style  comments   so  try  to  use  c    style  comments  for  your   normal  code commentary  and reserve c style comments for commenting out sections of code  the java language also has a document comment      document comment    these comments are processed by the  javadoc  program to generate documentation from your source code  for example      this class does blah blah blah    class blah         this method does nothing            this is a multiple line comment       the leading   is not placed in documentation          public void nothing         java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   9 declarations a java variable may refer to an object  an array  or an item of primitive type  variables are defined using the following simple syntax  typename variablename  for example  int a         defines an integer int   b       defines a reference to array of ints vector v      reference to a vector object primitive  types the java language has the following primitive types  primitive  types primitive type description boolean true false byte 8  bits char 16  bits   unicode  short 16  bits int 32  bits long 64  bits float 32 bits ieee 754 1985 double 64 bits ieee 754 1985 java  int   types  may  not   be  used  as  boolean   types  and  are  always  signed  objects a  simple  c    object  or  c  struct  definition  such  as   button b    allocates memory  on  the  stack  for  a  button   object  and  makes  b   refer  to  it   by  contrast   you must  specifically  instantiate  java  objects  with  the  new   operator   for  example  java  basics java  basics   10    1996 2003  jguru com   all  rights  reserved     java code void foo          define a reference to a button  init to null   button b       allocate space for a button  b points to it   b   new button  ok      int i   2    as the accompanying figure shows  this code places a reference  b  to the  button object on the stack and allocates memory for the new object on the heap  the  equivalent  c    and  c  statements  that  would  allocate  memory  on  the  heap would be     c   code button  b   null          declare a new button pointer b   new button  ok        point it to a new button    c code    button  b   null                  declare a new button pointer    b   calloc 1  sizeof button       allocate space for a button    init b   ok                       something like this to init b    all java objects reside on the heap  there are no objects stored on the stack  storing objects on the heap does not cause potential memory leakage problems because of garbage collection  each  java  primitive  type  has  an  equivalent  object  type   e g    integer    byte   float    double    these  primitive  types  are  provided  in  addition  to  object  types purely for efficiency  an  int  is much more efficient than an  integer   java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   11 strings java string literals look the same as those in c c    but java strings are real objects   not  pointers  to  memory   java  strings  may  or  may  not  be  null  terminated  every string literal such as  a string literal  is  interpreted  by  the  java  compiler  as new string  a string literal   java strings are constant in length and content  for variable length strings  use stringbuffer  objects  strings  may  be  concatenated  by  using  the  plus  operator  string s    one     two      s     onetwo  you may concatenate any object to a string  you use the  tostring    method to convert  objects  to  a  string    and  primitive  types  are  converted  by  the  compiler  for example  string s    1 1     2     s     1 1 2  the length of a string may be obtained with string method  length     e g    abc  length    has the value 3  to  convert  an  int  to a  string    use  string s   string valueof 4   to  convert  a  string   to  an  int    use  int a   integer parseint  4    array  objects in  c  and  c     arrays  are  pointers  to  data  in  memory   java  arrays  are  objects  that know the number and type of their elements  the first element is index  0   as in c c    generic  array  object   elements java  basics java  basics   12    1996 2003  jguru com   all  rights  reserved  element  type element 0 element 1     element n 1 the syntax for creating an array object is  typename   variablename  this declaration defines the array object  it does  not  allocate memory for the array object  nor   does  it  allocate  the  elements  of  the  array  in  addition   you  may  not specify  a  size  within  the  square  brackets  to  allocate  an  array   use  the  new   operator  int   a   new int 5       java code  make array of 5 ints new int 5  5 int 0 0 0 0 0 in  c  or  c     by  contrast   you  would  write  either    c c   code  make array of 5 ints on the stack    int a 5   or    c c   code  make array of 5 ints on the heap    java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   13 int  a   new int 5   an  array  of  java  objects  such  as    java code  make array of 5 references to buttons button   a   new button 5   creates  the  array  object  itself   but  not  the  elements  new button 5  5 button null   pointer null   pointer null   pointer null   pointer null   pointer you  must  use  the  new   operator  to  create  the  elements  a 0    new button  ok    a 3    new button  quit    in  c     to  make  an  array  of  pointers  to  objects  you  would  write     c    make an array of 5 pointers to buttons button   a   new button   5      create the array a 0    new button  ok            create two new buttons a 3    new button  quit    in c  code for the same task would look like     c  make an array of 5 pointers to structs       allocate the array    button   a   calloc 5  sizeof button         allocate one button    a 0    calloc 1  sizeof button       init the first button    settitle a 0    ok       allocate another button    a 3    calloc 1  sizeof button       init the second button    java  basics java  basics   14    1996 2003  jguru com   all  rights  reserved  settitle a 3    quit    multi dimensional java arrays are created by making arrays of arrays  just as in c c    for example  t     t   new t 10  5   makes  a  five element  array  of  ten  arrays  of  references  to  objects  of  type  t    this statement  does  not  allocate  memory  for  any  t   objects  accessing an undefined array element causes a runtime exception called arrayindexoutofboundsexception   accessing a defined array element that has not yet been assigned to an object results in a runtime  nullpointerexception   initializers variables may be initialized as follows      primitive  types int i   3  boolean g   true      objects button b   null  employee e   new employee        arrays int   i    1  2  3  4   or in java 1 1 int   i  i   new int    1  2  3  4   constants variables modified by the  static final  keywords are constants  equivalent to the  const  keyword in c    no equivalent in c   for example     same as  const int version 1   in c   static final int version   1  static final string owner    terence   java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   15 expressions most  java  expressions  are  similar  to  those  in  c c    constant  expressions item examples  or  description id i  namelist qualified id integer max_value  obj member  npackage class  package obj id e  f     g  a i   b 3  4  string  literal  jim    delimited by    char  literal  a     t    delimited by    unicode character constant  u00ae boolean  literal true    false    not  an int  int   constant 4 float   constant 3 14f  2 7e6f   f or f suffix double   constant 3 14  2 7e6d    default    d or d suffix hexadecimal constant 0x123 octal  constant 077 null the  null  object  note lowercase   this the current object super the  superclass  view  of  this  object general  expressions item examples  or  description java  basics java  basics   16    1996 2003  jguru com   all  rights  reserved  id i  namelist obj method args  instance method call class method args  class method call    expr     3 4  7 new t  constructor args   instantiates  a  new  object  or  class  t new t e  f     g  allocates an array object operators the java language has added the       zero extend right shift operator to the set of c    operators    c    operators  include  instanceof   and  new    which  are  not present in c  note that  sizeof  has been removed  as memory allocation is handled  for  you    the  operators   in  order  of  highest  to  lowest  priority   are      new                          typename                                                instanceof                                                                                             note  that  the  precedence  of  the  new   operator  and  the        operator  bind java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   17 differently  than  in  c     a  proper  java  statement  is     java code new t   method    in  c     you  would  use     c   code  new t   method    statements java statements are similar to those in c c   as the following table shows  forms  of  common  statements statement examples if if   boolean expr    stat1 if   boolean expr    stat1  else  stat2 switch switch   int expr     case  int const expr     stat1 case  int const expr     stat2 default    stat3   for for  int i 0  i 10  i    stat while while   boolean expr    stat do while do    stats    while   boolean expr   return return  expr   the java  break  and  continue  statements may have labels  these labels refer to the  specific  loop  that  the  break   or  continue   apply  to    each  loop  can  be preceded by a label   java  semantics we say that the java language has  reference semantics  and c c   have  copy semantics    this  means  that  java  objects  are  passed  to  methods  by  reference  in java  while objects are passed by value in c c    java  primitive  types   however   are  not  treated  in  the  same  way  as  java  objects  primitive  types  are  assigned   compared   and  passed  as  arguments  using  copy java  basics java  basics   18    1996 2003  jguru com   all  rights  reserved  semantics  just as in c c    for example   i   j  for two  int  variables  i  and  j performs  a  32 bit  integer  copy  assignment  of  objects assignment makes two variables refer to the same object  for example  class data     public int data   0    public data int d    data   d      i       data a   new data 1      a data is 1 i       data b   new data 2      b data is 2 ii      b   a                    b data and a data are 1 iii     a data   3               b data and a data are 3 iv      a   new data 4           b data is 3  a data is 4 to  copy  objects   define  and  use  clone     class data implements cloneable     public int data   0    public data int d    data   d      public object clone         data d    data  super clone        d data   data      return d            data a   new data 1      a data is 1 data b   new data 2      b data is 2 b   a clone              b data and a data are 1 a data   3               b data is 1  a data is 3 java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   19 note   the above class definition requires exception handling code  we  however  have  not  yet  discussed  exception  handling   for  now   pretend  that  it  is  not necessary  method  parameters  and  return  values arguments  and  return  values  for  primitive  types  are  passed  by  value  to  and  from all java methods because they are implied assignments  as in c c    however  all java objects are passed by reference  for example  the c c   code     c   code int foo int j    return j   34   button  bfoo button  b      if   b    null   return b    else return new button      or  in c    c code    int foo int j    return j   34   button  bfoo button  b      if   b    null   return b    else return calloc sizeof button      would be written in the java language     java code int foo int j    return j   34   button bfoo button b      if   b    null   return b    else return new button  ok      equality two  java  primitive  types  are  equal    using  the       operator   when  they  have  the same value  e g     3    3     however  two object variables are equal if and only if they refer to the same instantiated object  a  shallow  comparison  for example  void test       data a   new data 1     data b   new data 2     data c   new data 1        a    b is false      a    c is false  in c    this d be true  java  basics java  basics   20    1996 2003  jguru com   all  rights  reserved    data d   a    data e   a       d    e is true       d e are referring to same object   to perform a  deep  comparison  the convention is to define a method called equals     you would rewrite  data  as  class data     public int data   0    public data int d    data   d      boolean equals data d        return data    d data            data a   new data 1   data b   new data 1      a equals b  is true     no  pointers  the java language does not have pointer types nor address arithmetic  java variables  are  either  primitive  types  or  references  to  objects   to  illustrate  the difference between c c   and java semantics  consider the following equivalent code fragments     c   code  c code would be similar  stack  s   new stack     point to a new stack s  push          dereference and access method push   the equivalent java code is     java code    internally  consider s to be a  stack    stack s   new stack       dereference s automatically s push       garbage  collection an automatic garbage collector deallocates memory for objects that are no longer needed  by  your  program   thereby  relieving  you  from  the  tedious  and  error prone java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   21 task of deallocating your own memory  as a consequence of automatic garbage collection and lack of pointers  a java object is either  null  or valid  there is no way to refer to an invalid or stale object  one that has been deallocated   to illustrate the effect of a garbage collector  consider the following c   function that allocates 1000 objects on the heap via the  new  operator  a similar c function would allocate memory using calloc malloc      c   code void f       t  t    for  int i   1  i    1000  i          t   new t     ack            every time the loop body is executed  a new instance of class  t  is instantiated  and t   is  pointed  to  it   but  what  happens  to  the  instance  that  t   used  to  point  to   it s still  allocated   but  nothing  points  to  it  and  therefore  it s  inaccessible   memory  in this  state  is  referred  to  as   leaked   memory  in the java language  memory leaks are not an issue  the following java method causes no ill effects     java code void f       t t    for  int i   1  i    1000  i          t   new t          in java  each time  t  is assigned a new reference  the old reference is now available for garbage collection  note that it isn t immediately freed  it remains allocated until the garbage collector thread is next executed and notices that it can be freed  put simply  automatic garbage collection reduces programming effort  programming errors  and program complexity    mml   0 995a     version    id     depot main src edu modules javabasics javabasics mml 3      java  basics java  basics   22    1996 2003  jguru com   all  rights  reserved  java  basics    1996 2003  jguru com   all  rights  reserved  java  basics   23 this page intentionally left blank"}